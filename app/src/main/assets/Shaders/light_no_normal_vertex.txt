#version 300 es
precision highp float;

layout(location = 0) in vec3 position;
layout(location = 1) in  vec2 texCoords;
layout(location = 2) in vec3 normal;
layout(location = 3) in vec3 tangent;
layout(location = 4) in vec3 bitangent;

struct DirectionalLight
{
    vec3 direction;
    vec3 specularColor;
    vec3 color;
};

uniform DirectionalLight dirLight;

uniform mat4 mvp;
uniform mat4 model;


out vec2 coords;
out vec3 norms;

out DirectionalLight directionalLight;


out vec3 camPos;
out vec3 fragpos;

uniform vec3 cameraPosition;


mat3 TBN;
void main()
{


gl_Position = mvp * vec4(position,1.0);
fragpos = vec3(model * vec4(position,1.0));
coords = texCoords;
norms =  mat3(transpose(inverse(model))) * normal;

directionalLight = dirLight;
camPos = cameraPosition;


}